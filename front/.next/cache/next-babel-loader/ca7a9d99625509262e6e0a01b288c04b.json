{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird3\\\\front\\\\pages\\\\LandingPage.jsx\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingPage = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  const onShow = () => {\n    setShow();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      onCick: onShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        top: '30px'\n      },\n      children: mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), postForm ? console.log('asd') : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  res\n}) => {\n  // console.log(req.headers);\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default LandingPage;","map":{"version":3,"sources":["C:/qwe/nodebird3/front/pages/LandingPage.jsx"],"names":["React","useEffect","useCallback","useState","AppLayout","PostForm","PostCard","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","wrapper","END","LandingPage","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","show","setShow","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","dispatch","type","addEventListener","removeEventListener","onShow","position","top","map","postForm","console","log","getServerSideProps","store","req","res","cookie","headers","axios","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport wrapper from '../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nconst LandingPage = () => {\r\n\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n    const [show,setShow] = useState(false);\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n\r\n    const onShow = () => {\r\n        setShow()\r\n    }\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            <PostForm onCick={onShow} />\r\n            <div style={{ position: 'relative', top: '30px' }}>\r\n                {mainPosts.map((post) =>\r\n                    <PostCard key={post.id} post={post} />\r\n                )}\r\n            </div>\r\n            {postForm ?\r\n                console.log('asd')\r\n                : null\r\n            }\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, res }) => {\r\n    // console.log(req.headers);\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n})\r\n\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}