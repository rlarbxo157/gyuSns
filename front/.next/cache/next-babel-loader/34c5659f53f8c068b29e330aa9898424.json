{"ast":null,"code":"import React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport moment from 'moment';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { useDispatch } from 'react-redux';\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, REMOVE_POST_REQUEST } from '../reducers/post';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nmoment.locale('ko');\nconst CardWrapper = styled.div.withConfig({\n  displayName: \"PostCard__CardWrapper\",\n  componentId: \"sc-x69jxj-0\"\n})([\"margin-bottom:20px;\"]);\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false); // const [liked, setLiked] = useState(false);\n\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onLike = useCallback(() => {\n    // console.log(post.id);\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const liked = post.Likers.find(v => v.id === id); // console.log(post);\n\n  return /*#__PURE__*/_jsxs(CardWrapper, {\n    children: [/*#__PURE__*/_jsxs(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsx(PostImages, {\n        images: post.Images\n      }),\n      actions: [/*#__PURE__*/_jsx(RetweetOutlined, {}, \"retweet\"), liked ? /*#__PURE__*/_jsx(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\") : /*#__PURE__*/_jsx(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\"), /*#__PURE__*/_jsx(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\"), /*#__PURE__*/_jsx(Popover, {\n        content: /*#__PURE__*/_jsxs(Button.Group, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }), /*#__PURE__*/_jsx(Button, {\n            children: \"\\uC218\\uC815\"\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: onRemovePost,\n            danger: true,\n            children: \"\\uC0AD\\uC81C\"\n          })]\n        }),\n        children: /*#__PURE__*/_jsx(EllipsisOutlined, {})\n      }, \"ellipsis\")],\n      extra: /*#__PURE__*/_jsx(FollowButton, {\n        post: post\n      }),\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        style: {\n          float: 'right'\n        },\n        children: moment(post.createdAt).format('YYYY.MM.DD.')\n      }), /*#__PURE__*/_jsx(Card.Meta, {\n        avatar: /*#__PURE__*/_jsx(Avatar, {\n          children: post.User.nickname[0]\n        }),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsx(PostCardContent, {\n          postData: post.content\n        })\n      })]\n    }), commentFormOpened && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(CommentForm, {\n        post: post\n      }), /*#__PURE__*/_jsx(List, {\n        header: `${post.Comments.length} 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsx(\"li\", {\n          children: /*#__PURE__*/_jsx(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsx(Link, {\n              href: {\n                pathname: '/user',\n                query: {\n                  id: item.User.id\n                }\n              },\n              as: `/user/${item.User.id}`,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: /*#__PURE__*/_jsx(Avatar, {\n                  children: item.User.nickname[0]\n                })\n              })\n            }),\n            content: item.content\n          })\n        })\n      })]\n    })]\n  }, post.id);\n};\n\nexport default PostCard;","map":null,"metadata":{},"sourceType":"module"}