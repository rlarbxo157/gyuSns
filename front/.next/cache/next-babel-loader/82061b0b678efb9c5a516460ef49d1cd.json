{"ast":null,"code":"import { all, call, delay, fork, put, take, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\nimport axios from 'axios';\n\nfunction logInApi(data) {\n  return axios.post('http://localhost:3065/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInApi, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE // error:err.response.data,\n\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE // error:err.response.data\n\n    });\n  }\n}\n\nfunction signUpApi(data) {\n  return axios.post('http://localhost:3065/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpApi, action.data);\n    console.log('asdasd123123');\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLogin() {\n  console.log('asdasd');\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/sagas/user.jsx"],"names":["all","call","delay","fork","put","take","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","axios","logInApi","data","post","logIn","action","result","type","err","console","error","logOut","LOG_OUT_SUCCESS","signUpApi","signUp","log","response","watchSignUp","watchLogin","watchLogOut","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,KAAjB,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwCC,UAAxC,QAAyD,oBAAzD;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAwCC,eAAxC,EAAwDC,eAAxD,EAAwEC,cAAxE,EAAwFC,eAAxF,EAAyGC,eAAzG,EAA0HC,eAA1H,QAAiJ,kBAAjJ;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOF,KAAK,CAACG,IAAN,CAAW,kCAAX,EAA8CD,IAA9C,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMpB,IAAI,CAACe,QAAD,EAAUI,MAAM,CAACH,IAAjB,CAAzB;AACA,UAAMb,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACX,cADC;AAENM,MAAAA,IAAI,EAACI,MAAM,CAACJ;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACf,cADC,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUmB,MAAV,CAAiBN,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACK;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMJ,GAAN,EAAU;AACP,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACb,eADC,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,SAASmB,SAAT,CAAmBX,IAAnB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,4BAAX,EAAwCD,IAAxC,CAAP;AACH;;AAED,UAAUY,MAAV,CAAiBT,MAAjB,EAAwB;AACpB,MAAG;AACA,UAAMC,MAAM,GAAG,MAAMpB,IAAI,CAAC2B,SAAD,EAAWR,MAAM,CAACH,IAAlB,CAAzB;AACAO,IAAAA,OAAO,CAACM,GAAR,CAAY,cAAZ;AACAN,IAAAA,OAAO,CAACM,GAAR,CAAYT,MAAZ;AACA,UAAMjB,GAAG,CAAC;AACLkB,MAAAA,IAAI,EAACT;AADA,KAAD,CAAT;AAGF,GAPD,CAOC,OAAMU,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACR,eADC;AAENW,MAAAA,KAAK,EAACF,GAAG,CAACQ,QAAJ,CAAad;AAFb,KAAD,CAAT;AAIH;AACJ;;AAID,UAAUe,WAAV,GAAuB;AACnB,QAAM1B,UAAU,CAACM,eAAD,EAAiBiB,MAAjB,CAAhB;AACH;;AAED,UAAUI,UAAV,GAAsB;AAClBT,EAAAA,OAAO,CAACM,GAAR,CAAY,QAAZ;AACA,QAAMxB,UAAU,CAACE,cAAD,EAAgBW,KAAhB,CAAhB;AACH;;AAED,UAAUe,WAAV,GAAuB;AACnB,QAAM5B,UAAU,CAACI,eAAD,EAAiBgB,MAAjB,CAAhB;AACH;;AAED,eAAe,UAAUS,QAAV,GAAoB;AAC/B,QAAMnC,GAAG,CAAC,CACNG,IAAI,CAAC8B,UAAD,CADE,EAEN9B,IAAI,CAAC+B,WAAD,CAFE,EAGN/B,IAAI,CAAC6B,WAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {all,call,delay,fork, put, take, takeLatest} from 'redux-saga/effects';\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST,LOG_OUT_FAILURE,LOG_OUT_REQUEST,LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\r\nimport axios from 'axios';\r\n\r\nfunction logInApi(data){\r\n    return axios.post('http://localhost:3065/user/login',data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        const result = yield call(logInApi,action.data)\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n            data:result.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n            // error:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            // error:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpApi(data){\r\n    return axios.post('http://localhost:3065/user',data);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n       const result = yield call(signUpApi,action.data);\r\n       console.log('asdasd123123');\r\n       console.log(result);\r\n       yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n       })\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST,signUp);\r\n}\r\n\r\nfunction* watchLogin(){\r\n    console.log('asdasd');\r\n    yield takeLatest(LOG_IN_REQUEST,logIn);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}