{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST, FOLLOW_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === (me === null || me === void 0 ? void 0 : me.id)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Button, {\n    onClick: onClickButton,\n    children: isFollowing ? 'unfollow' : 'follow'\n  });\n};\n\nexport default FollowButton;","map":null,"metadata":{},"sourceType":"module"}