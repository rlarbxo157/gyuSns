{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from './user';\nconst initialState = {\n  name: 'kim',\n  age: 27,\n  password: 'sjaks7788'\n};\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/reducers/index.jsx"],"names":["HYDRATE","combineReducers","user","initialState","name","age","password","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,KADY;AAEjBC,EAAAA,GAAG,EAAC,EAFa;AAGjBC,EAAAA,QAAQ,EAAC;AAHQ,CAArB;AAMA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,KAAK,EAAC,CAACC,KAAK,GAAE,EAAR,EAAWC,MAAX,KAAqB;AACvB,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKX,OAAL;AACEY,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACF;AACE,eAAOL,KAAP;AALN;AAOH,GAT+B;AAUhCP,EAAAA;AAVgC,CAAD,CAAnC;AAYA,eAAeK,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combineReducers } from \"redux\";\r\nimport user from './user';\r\n\r\n\r\nconst initialState = {\r\n    name:'kim',\r\n    age:27,\r\n    password:'sjaks7788',\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    index:(state ={},action)=> {\r\n        switch (action.type) {\r\n            case HYDRATE:\r\n              console.log('HYDRATE', action);\r\n              return { ...state, ...action.payload };\r\n            default:\r\n              return state;\r\n          }\r\n    },\r\n    user\r\n})\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}