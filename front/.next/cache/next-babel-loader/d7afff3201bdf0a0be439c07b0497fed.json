{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird3\\\\front\\\\pages\\\\LandingPage.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCreatedForm from \"../components/PostCreatedForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LandingPage = function LandingPage() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  useEffect(function () {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  var onShow = function onShow() {\n    setShow(function (prev) {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      onShow: onShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), show ? /*#__PURE__*/_jsxDEV(PostCreatedForm, {\n      onShow: onShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        top: \"30px\"\n      },\n      children: mainPosts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LandingPage, \"+JlFdy4/+aHP/QDAP6TFLNOv5do=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LandingPage;\nexport var __N_SSP = true;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["C:/qwe/nodebird3/front/pages/LandingPage.jsx"],"names":["React","useEffect","useState","AppLayout","PostForm","PostCard","useDispatch","useSelector","LOAD_POSTS_REQUEST","PostCreatedForm","LandingPage","state","post","mainPosts","hasMorePosts","loadPostsLoading","show","setShow","dispatch","addPostDone","setText","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","onShow","prev","position","top","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport { END } from \"redux-saga\";\r\nimport PostCreatedForm from \"../components/PostCreatedForm\";\r\nconst LandingPage = () => {\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  const [show, setShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (\r\n        window.pageYOffset + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  const onShow = () => {\r\n    setShow((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <AppLayout show={show}>\r\n      <PostForm onShow={onShow} />\r\n      {show ? <PostCreatedForm onShow={onShow} /> : null}\r\n      <div style={{ position: \"relative\", top: \"30px\" }}>\r\n        {mainPosts.map((post) => (\r\n          <PostCard key={post.id} post={post} />\r\n        ))}\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req, res }) => {\r\n      // console.log(req.headers);\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n      });\r\n      store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n      });\r\n      store.dispatch(END);\r\n      await store.sagaTask.toPromise();\r\n    }\r\n);\r\n\r\nexport default LandingPage;\r\n"]},"metadata":{},"sourceType":"module"}