{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird3\\\\front\\\\pages\\\\LandingPage.jsx\";\nimport React, { useEffect, useCallback, useState, useRef } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport { Form, Input, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingPage = () => {\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const imageInput = useRef();\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    // console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 입력해주세요');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    }); // dispatch(addPost(text));\n  }, [text, imagePaths]);\n  const onRemoveImage = useCallback(i => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: i\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  const onShow = () => {\n    setShow(prev => !prev);\n    console.log(show);\n    console.log('a');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      onShow: onShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), show ? /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\",\n        style: {\n          borderRadius: '20px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput,\n          onChange: onChangeImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickImageUpload,\n          style: {\n            position: 'relative',\n            left: '10px'\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            float: 'right',\n            position: 'relative',\n            right: '10px'\n          },\n          htmlType: \"submit\",\n          children: \"\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map((v, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:3065/${v}`,\n              style: {\n                width: '200px'\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onRemoveImage(i),\n                children: \"\\uC81C\\uAC70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 14\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        top: '30px'\n      },\n      children: mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  res\n}) => {\n  // console.log(req.headers);\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default LandingPage;","map":{"version":3,"sources":["C:/qwe/nodebird3/front/pages/LandingPage.jsx"],"names":["React","useEffect","useCallback","useState","useRef","AppLayout","PostForm","PostCard","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","wrapper","END","Form","Input","Button","LandingPage","mainPosts","hasMorePosts","loadPostsLoading","state","post","show","setShow","imagePaths","addPostDone","text","setText","imageInput","dispatch","me","user","onClickImageUpload","current","click","onChangeImages","e","imageFormData","FormData","forEach","call","target","files","f","append","type","UPLOAD_IMAGES_REQUEST","data","onChangeText","value","onSubmit","trim","alert","formData","p","ADD_POST_REQUEST","onRemoveImage","i","REMOVE_IMAGE","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","onShow","prev","console","log","margin","borderRadius","marginBottom","position","left","float","right","map","v","display","width","top","getServerSideProps","store","req","res","cookie","headers","axios","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState,useRef } from 'react'\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport wrapper from '../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nimport { Form, Input, Button } from 'antd';\r\nconst LandingPage = () => {\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n    const [show,setShow] = useState(false);\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const [text, setText] = useState('');\r\n    const imageInput = useRef();\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n  \r\n    useEffect(() => {\r\n      if (addPostDone) {\r\n        setText('');\r\n      }\r\n    }, [addPostDone]);\r\n  \r\n  \r\n    const onClickImageUpload = useCallback(() => {\r\n      imageInput.current.click();\r\n    }, [imageInput.current]);\r\n  \r\n    const onChangeImages = useCallback((e) => {\r\n      // console.log('images', e.target.files);\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, (f) => {\r\n        imageFormData.append('image', f);\r\n      });\r\n      dispatch({\r\n        type: UPLOAD_IMAGES_REQUEST,\r\n        data: imageFormData,\r\n      });\r\n    }, []);\r\n  \r\n    const onChangeText = useCallback((e) => {\r\n      setText(e.target.value);\r\n    }, [])\r\n  \r\n    const onSubmit = useCallback((e) => {\r\n  \r\n      if (!text || !text.trim()) {\r\n        return alert('게시글을 입력해주세요');\r\n      }\r\n  \r\n      const formData = new FormData();\r\n      imagePaths.forEach((p) => {\r\n        formData.append('image', p);\r\n      })\r\n      formData.append('content', text);\r\n      return dispatch({\r\n        type: ADD_POST_REQUEST,\r\n        data: formData,\r\n      })\r\n      // dispatch(addPost(text));\r\n    }, [text, imagePaths]);\r\n  \r\n    const onRemoveImage = useCallback((i) => () => {\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: i\r\n      })\r\n    }, []);\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n\r\n    const onShow = () => {\r\n        setShow((prev)=>!prev);\r\n        console.log(show);\r\n        console.log('a');\r\n    }\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            <PostForm onShow={onShow}  />\r\n            {show?\r\n             <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit} >\r\n                <br />\r\n                <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"\" style={{borderRadius:'20px',marginBottom:'10px'}} />\r\n\r\n                <div style={{marginBottom:'10px'}}>\r\n\r\n                <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload} style={{position:'relative',left:'10px'}}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right',position:'relative',right:'10px' }} htmlType=\"submit\">입력</Button>\r\n                </div>\r\n                <div>\r\n                {imagePaths.map((v,i) => {\r\n                    return (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                        <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n                </Form>\r\n            :\r\n            null}\r\n            <div style={{ position: 'relative', top: '30px' }}>\r\n                {mainPosts.map((post) =>\r\n                    <PostCard key={post.id} post={post} />\r\n                )}\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, res }) => {\r\n    // console.log(req.headers);\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n})\r\n\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}