{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird3\\\\front\\\\pages\\\\LandingPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from \"redux-saga\";\nimport PostCreatedForm from \"../components/PostCreatedForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingPage = () => {\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   if (addPostDone) {\n  //     setText(\"\");\n  //   }\n  // }, [addPostDone]);\n\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  const onShow = () => {\n    setShow(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      onShow: onShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), show ? /*#__PURE__*/_jsxDEV(PostCreatedForm, {\n      onShow: onShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        top: \"30px\"\n      },\n      children: mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  res\n}) => {\n  // console.log(req.headers);\n  const cookie = req ? req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default LandingPage;","map":{"version":3,"sources":["C:/qwe/nodebird3/front/pages/LandingPage.jsx"],"names":["React","useEffect","useState","AppLayout","PostForm","PostCard","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","wrapper","END","PostCreatedForm","LandingPage","mainPosts","hasMorePosts","loadPostsLoading","state","post","show","setShow","dispatch","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","onShow","prev","position","top","map","getServerSideProps","store","req","res","cookie","headers","axios","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport { END } from \"redux-saga\";\r\nimport PostCreatedForm from \"../components/PostCreatedForm\";\r\nconst LandingPage = () => {\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  const [show, setShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   if (addPostDone) {\r\n  //     setText(\"\");\r\n  //   }\r\n  // }, [addPostDone]);\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (\r\n        window.pageYOffset + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  const onShow = () => {\r\n    setShow((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <AppLayout show={show}>\r\n      <PostForm onShow={onShow} />\r\n      {show ? <PostCreatedForm onShow={onShow} /> : null}\r\n      <div style={{ position: \"relative\", top: \"30px\" }}>\r\n        {mainPosts.map((post) => (\r\n          <PostCard key={post.id} post={post} />\r\n        ))}\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req, res }) => {\r\n      // console.log(req.headers);\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n      });\r\n      store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n      });\r\n      store.dispatch(END);\r\n      await store.sagaTask.toPromise();\r\n    }\r\n);\r\n\r\nexport default LandingPage;\r\n"]},"metadata":{},"sourceType":"module"}