{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST } from '../reducers/user';\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(action);\n          _context.prev = 1;\n          _context.next = 4;\n          return delay(1000);\n\n        case 4:\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 8]]);\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('asdasd');\n          _context3.next = 3;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/sagas/user.jsx"],"names":["logIn","logOut","watchLogin","watchLogOut","userSaga","all","delay","fork","put","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","action","console","log","type","LOG_IN_SUCCESS","data","error","response","LOG_OUT_SUCCESS"],"mappings":";;oDAGUA,K;qDAiBAC,M;qDAcAC,U;qDAKAC,W;qDAIeC,Q;;AA3CzB,SAAQC,GAAR,EAAYC,KAAZ,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,UAA7B,QAA8C,oBAA9C;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAwCC,eAAxC,EAAwDC,eAAxD,QAA+E,kBAA/E;;AAEA,SAAUb,KAAV,CAAgBc,MAAhB;AAAA;AAAA;AAAA;AAAA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AADJ;AAAA;AAGQ,iBAAMR,KAAK,CAAC,IAAD,CAAX;;AAHR;AAAA;AAIQ,iBAAME,GAAG,CAAC;AACNS,YAAAA,IAAI,EAACC,cADC;AAENC,YAAAA,IAAI,EAACL,MAAM,CAACK;AAFN,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQJ,UAAAA,OAAO,CAACK,KAAR;AATR;AAUQ,iBAAMZ,GAAG,CAAC;AACNS,YAAAA,IAAI,EAACP,cADC;AAENU,YAAAA,KAAK,EAAC,YAAIC,QAAJ,CAAaF;AAFb,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUlB,MAAV,CAAiBa,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMR,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAGQ,iBAAME,GAAG,CAAC;AACNS,YAAAA,IAAI,EAACK;AADC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOQ,iBAAMd,GAAG,CAAC;AACNS,YAAAA,IAAI,EAACL,eADC;AAENQ,YAAAA,KAAK,EAAC,aAAIC,QAAJ,CAAaF;AAFb,WAAD,CAAT;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUjB,UAAV;AAAA;AAAA;AAAA;AAAA;AACIa,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AADJ;AAEI,iBAAMP,UAAU,CAACE,cAAD,EAAgBX,KAAhB,CAAhB;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAACI,eAAD,EAAiBZ,MAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNE,IAAI,CAACL,UAAD,CADE,EAENK,IAAI,CAACJ,WAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all,delay,fork, put, takeLatest} from 'redux-saga/effects';\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST,LOG_OUT_FAILURE,LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\nfunction* logIn(action){\r\n    console.log(action);\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n            data:action.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n            error:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            error:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    console.log('asdasd');\r\n    yield takeLatest(LOG_IN_REQUEST,logIn);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}