{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unlikePost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport axios from \"axios\";\nimport { all, call, put, takeLatest, fork, throttle } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostApi(data) {\n  return axios.post('/post', data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log(result.data);\n          _context.next = 7;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 9;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 9:\n          _context.next = 14;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n} // function uploadImagesApi(data){\n//     return axios.post('/post/')\n// }\n// function* uploadImages(action){\n//     try{\n//         const result = yield all(uploadImagesApi,action.data);\n//     }\n// }\n\n\nfunction addCommentApi(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data); // POST /post/1/comment\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addCommentApi, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: ADD_COMMENT_REQUEST,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction loadPostsApi(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostsApi, action.lastId);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 13;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikePost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 13;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 13;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime.wrap(function watchUnlikePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchRemovePost) // fork(watchUploadImages),\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}","map":{"version":3,"sources":["C:/qwe/nodebird/front/sagas/post.jsx"],"names":["addPost","addComment","loadPosts","uploadImages","likePost","unlikePost","watchAddPost","watchAddComment","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","watchRemovePost","postSaga","axios","all","call","put","takeLatest","fork","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_TO_ME","addPostApi","data","post","action","result","console","log","type","id","addCommentApi","postId","error","loadPostsApi","get","lastId","response","uploadImagesAPI","likePostAPI","patch","unlikePostAPI","REMOVE_POST_REQUEST","removePost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeLatest,fork, throttle } from \"redux-saga/effects\";\r\nimport { ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_FAILURE,UPLOAD_IMAGES_REQUEST,UPLOAD_IMAGES_SUCCESS,\r\nUPLOAD_IMAGES_FAILURE, \r\nADD_COMMENT_REQUEST,\r\nLOAD_POSTS_REQUEST,\r\nLOAD_POSTS_SUCCESS,LOAD_POSTS_FAILURE,LIKE_POST_REQUEST,LIKE_POST_SUCCESS,LIKE_POST_FAILURE,\r\nUNLIKE_POST_REQUEST,UNLIKE_POST_SUCCESS,UNLIKE_POST_FAILURE} from \"../reducers/post\";\r\n\r\nimport {ADD_POST_TO_ME} from '../reducers/user';\r\n\r\n\r\nfunction addPostApi(data){\r\n    return axios.post('/post',data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        console.log(result.data);\r\n        yield put({\r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n        yield put({\r\n            type:ADD_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// function uploadImagesApi(data){\r\n//     return axios.post('/post/')\r\n// }\r\n\r\n// function* uploadImages(action){\r\n//     try{\r\n//         const result = yield all(uploadImagesApi,action.data);\r\n//     }\r\n// }\r\n\r\nfunction addCommentApi(data){\r\n    return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\r\n}\r\n\r\nfunction* addComment(action){\r\n    try{\r\n        const result = yield call(addCommentApi,action.data);\r\n        yield put({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:result.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nfunction loadPostsApi(data){\r\n    return axios.get(`/posts`,data);\r\n}\r\n\r\nfunction* loadPosts(action){\r\n    try{\r\n        const result = yield call(loadPostsApi,action.lastId);\r\n        yield put({\r\n            type:LOAD_POSTS_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(error){\r\n        console.error(error);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            error: error.response.data,\r\n        });\r\n    }\r\n}\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images', data);\r\n  }\r\n  \r\nfunction* uploadImages(action){\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        yield put({\r\n          type: UPLOAD_IMAGES_SUCCESS,\r\n          data: result.data,\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n          type: UPLOAD_IMAGES_FAILURE,\r\n          error: err.response.data,\r\n        });\r\n      }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n  }\r\n  \r\n  function* likePost(action) {\r\n    try {\r\n      const result = yield call(likePostAPI, action.data);\r\n      yield put({\r\n        type: LIKE_POST_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: LIKE_POST_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  function unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n  }\r\n  \r\n  function* unlikePost(action) {\r\n    try {\r\n      const result = yield call(unlikePostAPI, action.data);\r\n      yield put({\r\n        type: UNLIKE_POST_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: UNLIKE_POST_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\nfunction* watchLoadPosts(){\r\n    yield throttle(5000,LOAD_POSTS_REQUEST,loadPosts);\r\n}\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n  }\r\n\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchUploadImages(){\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST,uploadImages);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchLoadPosts),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchUploadImages),\r\n        fork(watchRemovePost),\r\n        // fork(watchUploadImages),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}