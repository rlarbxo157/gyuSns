{"ast":null,"code":"import produce from \"immer\";\nvar initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMNET_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMNET_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQEUST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME'; // export const REMOVE_POST_TO_ME ='REMOVE_POST_TO_ME';\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar post = function post() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePostLoading = false, draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post3 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post3.Likers = _post3.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default post;","map":{"version":3,"sources":["C:/qwe/nodebird/front/reducers/post.jsx"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_IMAGE","ADD_POST_TO_ME","addPost","data","type","addComment","post","state","action","draft","unshift","error","concat","length","find","v","id","PostId","Comments","Likers","push","UserId","filter","i"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nconst initialState = {\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    hasMorePosts: true,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST =\"ADD_POST_REQUEST\"\r\nexport const ADD_POST_SUCCESS =\"ADD_POST_SUCCESS\"\r\nexport const ADD_POST_FAILURE =\"ADD_POST_FAILURE\"\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMNET_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMNET_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST=\"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS=\"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE=\"UNLIKE_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST=\"REMOVE_POST_REQEUST\";\r\nexport const REMOVE_POST_SUCCESS=\"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE=\"REMOVE_POST_FAILURE\";\r\n\r\n\r\n\r\nexport const REMOVE_IMAGE=\"REMOVE_IMAGE\";\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n// export const REMOVE_POST_TO_ME ='REMOVE_POST_TO_ME';\r\n\r\nexport const addPost = (data)=> ({ \r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment = (data)=>({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst post = (state=initialState,action)=> produce(state,(draft)=> {\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;\r\n        case ADD_POST_SUCCESS:\r\n            draft.addPostLoading = false;\r\n            draft.addPostDone = true;\r\n            draft.mainPosts.unshift(action.data);\r\n            draft.imagePaths = [];\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = false;\r\n            draft.addPostError = action.error;\r\n            break;\r\n\r\n        case LOAD_POSTS_REQUEST:\r\n            draft.loadPostsLoading = true;\r\n            draft.loadPostsDone = false;\r\n            draft.loadPostsError = null;\r\n            break;\r\n        case LOAD_POSTS_SUCCESS:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsDone = true;\r\n            draft.mainPosts = draft.mainPosts.concat(action.data);\r\n            draft.hasMorePosts = action.data.length === 10;\r\n        break;\r\n            case LOAD_POSTS_FAILURE:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsError = action.error;\r\n            break; \r\n\r\n        case UPLOAD_IMAGES_REQUEST:\r\n            draft.uploadImagesLoading = true;\r\n            draft.uploadImagesDone = false;\r\n            draft.uploadImagesError = null;\r\n            break;\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            draft.imagePaths = action.data;\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesDone = true;\r\n            break;\r\n            }\r\n        case UPLOAD_IMAGES_FAILURE:\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesError = action.error;\r\n            break;\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.addCommentError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Comments.unshift(action.data);\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            break;\r\n        }\r\n\r\n        case LIKE_POST_REQUEST :\r\n            draft.likePostLoading = true;\r\n            draft.likePostDone = false;\r\n            draft.likePostError = null;\r\n            break;\r\n\r\n        case LIKE_POST_SUCCESS: {\r\n            const post = draft.mainPosts.find((v)=>v.id===action.data.PostId);\r\n            post.Likers.push({id:action.data.UserId});\r\n            draft.likePostLoading =false,\r\n            draft.likePostDone = true;\r\n            break;\r\n        }\r\n\r\n        case LIKE_POST_FAILURE:\r\n            draft.likePostLoading = false;\r\n            draft.likePostError = action.error;\r\n            break;\r\n\r\n        case UNLIKE_POST_REQUEST:\r\n            draft.unlikePostLoading = true;\r\n            draft.unlikePostDone = false;\r\n            draft.unlikePostError = null;\r\n            break;\r\n        case UNLIKE_POST_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostDone = true;\r\n            break;\r\n        }\r\n        case UNLIKE_POST_FAILURE:\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostError = action.error;\r\n            break;\r\n\r\n        case REMOVE_IMAGE:\r\n            draft.imagePaths = draft.imagePaths.filter((v,i)=>i!==action.data);\r\n            break;\r\n        case REMOVE_POST_REQUEST:\r\n            draft.removePostLoading = true;\r\n            draft.removePostDone = false;\r\n            draft.removePostError = null;\r\n            break;\r\n        case REMOVE_POST_SUCCESS:\r\n            draft.removePostLoading = false;\r\n            draft.removePostDone = true;\r\n            draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n            break;\r\n        case REMOVE_POST_FAILURE:\r\n            draft.removePostLoading = false;\r\n            draft.removePostError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n})\r\n\r\nexport default post;"]},"metadata":{},"sourceType":"module"}