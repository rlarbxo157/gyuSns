{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird\\\\front\\\\pages\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import store from '../store/configureStore';\nvar Home = function Home() {\n  _s();\n\n  // const {isLoggedIn} = useSelector(state=>state.user);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"4+ZXH2fCBlYQ88T69NAvaWEPQao=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/qwe/nodebird/front/pages/index.jsx"],"names":["React","useEffect","PostForm","PostCard","AppLayout","useDispatch","useSelector","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAGA;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB;AACA,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,qBAAYC,WAAW,CAAC,UAACI,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAvB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AACA,sBAAsDN,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAjE;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,YAAnB,iBAAmBA,YAAnB;AAAA,MAAiCC,gBAAjC,iBAAiCA,gBAAjC;;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd,aAASgB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GAA6DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAzG,EAA8G;AAC5G,YAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACrC,cAAMQ,MAAM,iBAAGV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAjB,UAAAA,QAAQ,CAAC;AACPkB,YAAAA,IAAI,EAAEpB,kBADC;AAEPiB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACF,YAAD,EAAeC,gBAAf,EAAiCF,SAAjC,CAhBM,CAAT;AAkBA,sBACE,QAAC,SAAD;AAAA,eACGF,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADT,EAEGE,SAAS,CAACgB,GAAV,CAAc,UAACjB,IAAD;AAAA,0BACX,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACa,EAApB;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAd,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAlCD;;GAAMlB,I;UAEaH,W,EACLC,W,EAC0CA,W;;;KAJlDE,I;;AAgDN,eAAeA,IAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport wrapper from '../store/configureStore';\r\nimport {END} from 'redux-saga';\r\n// import store from '../store/configureStore';\r\n\r\nconst Home = () => {\r\n  // const {isLoggedIn} = useSelector(state=>state.user);\r\n  const dispatch = useDispatch();\r\n  const {me} =useSelector((state)=>state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => \r\n          <PostCard key={post.id} post={post} />\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store)=> async({req,res})=>{\r\n  console.log(store.headers);\r\n  store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n  store.dispatch(END);\r\n  await store.sagaTask.toPromise();\r\n})\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}