{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from '../sagas';\n\nvar configureStore = function configureStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/qwe/nodebird2/front/store/configureStore.jsx"],"names":["createWrapper","createStore","applyMiddleware","compose","createSagaMiddleware","reducer","composeWithDevTools","rootSaga","configureStore","context","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,cAAc,GAAI,SAAlBA,cAAkB,CAACC,OAAD,EAAa;AACjC,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,WAAW,GAAE,CAACD,cAAD,CAAnB;AACA,MAAME,QAAQ,GAAG,OACfT,OAAO,CAACD,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CADQ,GAEfL,mBAAmB,CACnBJ,eAAe,MAAf,SAAmBS,WAAnB,CADmB,CAFrB;AAKA,MAAME,KAAK,GAAGZ,WAAW,CAACI,OAAD,EAASO,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBR,QAAnB,CAAjB;AACA,SAAOM,KAAP;AACH,CAXD;;AAaA,IAAMG,OAAO,GAAGhB,aAAa,CAACQ,cAAD,EAAgB;AACzCS,EAAAA,KAAK;AADoC,CAAhB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {createStore,applyMiddleware,compose} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from '../reducers';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootSaga from '../sagas';\r\n\r\nconst configureStore  = (context) => {\r\n    const sagaMiddleware = createSagaMiddleware();  \r\n    const middlewares =[sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(\r\n      applyMiddleware(...middlewares),\r\n    );\r\n    const store = createStore(reducer,enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug:process.env.NODE_ENV ==='development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}