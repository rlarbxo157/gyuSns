{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird3\\\\front\\\\pages\\\\profile.jsx\";\nimport React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NicknameEditForm from \"../components/NicknameEditForm\";\nimport AppLayout from \"../components/AppLayout\";\nimport FollowList from \"../components/FollowList\";\nimport Router from \"next/router\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport post from \"../reducers/post\";\nimport PostCard from \"../components/PostCard\"; // import useSWR from 'swr';\n// const fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return \"내 정보 로딩중...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD504\\uB85C\\uD544\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: me.Followings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: me.Followers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), me.Posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {}, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  res\n}) => {\n  // console.log('getServerSideProps start');\n  // console.log(req.headers);\n  const cookie = req ? req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END); // console.log('getServerSideProps end');\n\n  await store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/qwe/nodebird3/front/pages/profile.jsx"],"names":["React","useEffect","Head","useSelector","useDispatch","NicknameEditForm","AppLayout","FollowList","Router","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","axios","END","post","PostCard","Profile","dispatch","me","state","user","type","id","push","Followings","Followers","Posts","map","getServerSideProps","store","req","res","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport NicknameEditForm from \"../components/NicknameEditForm\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport FollowList from \"../components/FollowList\";\r\nimport Router from \"next/router\";\r\nimport {\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_MY_INFO_REQUEST,\r\n} from \"../reducers/user\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport axios from \"axios\";\r\nimport { END } from \"redux-saga\";\r\nimport post from \"../reducers/post\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\n// import useSWR from 'swr';\r\n\r\n// const fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n    });\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  if (!me) {\r\n    return \"내 정보 로딩중...\";\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>프로필</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowList header=\"팔로잉 목록\" data={me.Followings} />\r\n        <FollowList header=\"팔로워 목록\" data={me.Followers} />\r\n        {me.Posts.map((post) => (\r\n          <PostCard key={post.id} />\r\n        ))}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req, res }) => {\r\n      // console.log('getServerSideProps start');\r\n      // console.log(req.headers);\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n      });\r\n      store.dispatch(END);\r\n      // console.log('getServerSideProps end');\r\n      await store.sagaTask.toPromise();\r\n    }\r\n);\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}