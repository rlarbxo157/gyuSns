{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST } from '../reducers/user';\n\nfunction* logIn(action) {\n  console.log(action);\n\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  console.log('asdasd');\n  yield takeLatest(LOG_IN_REQUEST, logInRequest);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/sagas/user.jsx"],"names":["all","delay","fork","put","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","logIn","action","console","log","type","LOG_IN_SUCCESS","data","err","error","response","logOut","LOG_OUT_SUCCESS","watchLogin","logInRequest","watchLogOut","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,KAAZ,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,UAA7B,QAA8C,oBAA9C;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAwCC,eAAxC,EAAwDC,eAAxD,QAA+E,kBAA/E;;AAEA,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAG;AACC,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACC,cADC;AAENC,MAAAA,IAAI,EAACL,MAAM,CAACK;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMC,GAAN,EAAU;AACPL,IAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACA,UAAMb,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACR,cADC;AAENY,MAAAA,KAAK,EAACD,GAAG,CAACE,QAAJ,CAAaH;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUI,MAAV,CAAiBT,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACO;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMJ,GAAN,EAAU;AACP,UAAMb,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACN,eADC;AAENU,MAAAA,KAAK,EAACD,GAAG,CAACE,QAAJ,CAAaH;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,UAAV,GAAsB;AAClBV,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAMR,UAAU,CAACE,cAAD,EAAgBgB,YAAhB,CAAhB;AACH;;AAED,UAAUC,WAAV,GAAuB;AACnB,QAAMnB,UAAU,CAACI,eAAD,EAAiBW,MAAjB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAoB;AAC/B,QAAMxB,GAAG,CAAC,CACNE,IAAI,CAACmB,UAAD,CADE,EAENnB,IAAI,CAACqB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all,delay,fork, put, takeLatest} from 'redux-saga/effects';\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST,LOG_OUT_FAILURE,LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\nfunction* logIn(action){\r\n    console.log(action);\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n            data:action.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n            error:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            error:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    console.log('asdasd');\r\n    yield takeLatest(LOG_IN_REQUEST,logInRequest);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}