{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nconst initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: false,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: false\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }],\n  Followers: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }]\n});\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst user = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = dummyUser(action.data);\n      draft.logInDone = true;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n    // case 'LOG_OUT' :\n    //     return{\n    //         ...state,\n    //         isLoggedIn:false\n    //     }\n\n    default:\n      return _objectSpread({}, state);\n  }\n});\n\nexport default user;","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/reducers/user.jsx"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","user","state","action","draft","me","error"],"mappings":"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","sourcesContent":["import produce from \"immer\"\r\n\r\nconst initialState = {\r\n    logInLoading:false,\r\n    logInDone:false,\r\n    logInError:false,\r\n    logOutLoading:false,\r\n    logOutDone:false,\r\n    logOutError:false,\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\n\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: '제로초',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n    Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n  });\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return{\r\n        type:LOG_IN_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = () => {\r\n    return{\r\n        type:LOG_OUT_REQUEST\r\n    }\r\n}\r\n\r\nconst user = (state=initialState,action)=> produce(state,(draft)=>{\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST : \r\n            draft.logInLoading=true;\r\n            draft.logInError=null;\r\n            draft.logInDone=false;\r\n            break;\r\n        case LOG_IN_SUCCESS :\r\n            draft.logInLoading=false;\r\n            draft.me = dummyUser(action.data);\r\n            draft.logInDone=true;\r\n            break;\r\n        \r\n        case LOG_IN_FAILURE :\r\n            draft.logInLoading=false;\r\n            draft.logInError=action.error;\r\n\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutError = null;\r\n            draft.logOutDone = false;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n\r\n\r\n        // case 'LOG_OUT' :\r\n        //     return{\r\n        //         ...state,\r\n        //         isLoggedIn:false\r\n        //     }\r\n        \r\n        default:\r\n            return{\r\n                ...state,\r\n            }\r\n    }\r\n})\r\n\r\nexport default user;"]},"metadata":{},"sourceType":"module"}