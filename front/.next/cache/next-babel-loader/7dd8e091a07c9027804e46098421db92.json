{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST } from '../reducers/user';\nimport axios from 'axios';\n\nfunction logInApi(data) {\n  return axios.post('/api/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInApi, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  console.log('asdasd');\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/sagas/user.jsx"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","axios","logInApi","data","post","logIn","action","result","type","LOG_IN_SUCCESS","err","console","error","response","logOut","LOG_OUT_SUCCESS","watchLogin","log","watchLogOut","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,KAAjB,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,UAAlC,QAAmD,oBAAnD;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAwCC,eAAxC,EAAwDC,eAAxD,QAA+E,kBAA/E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOF,KAAK,CAACG,IAAN,CAAW,iBAAX,EAA6BD,IAA7B,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACU,QAAD,EAAUI,MAAM,CAACH,IAAjB,CAAzB;AACA,UAAMR,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACC,cADC;AAENN,MAAAA,IAAI,EAACI,MAAM,CAACJ;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMO,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMf,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACX,cADC;AAENe,MAAAA,KAAK,EAACF,GAAG,CAACG,QAAJ,CAAaV;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUW,MAAV,CAAiBR,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACO;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAML,GAAN,EAAU;AACP,UAAMf,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACT,eADC;AAENa,MAAAA,KAAK,EAACF,GAAG,CAACG,QAAJ,CAAaV;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUa,UAAV,GAAsB;AAClBL,EAAAA,OAAO,CAACM,GAAR,CAAY,QAAZ;AACA,QAAMrB,UAAU,CAACE,cAAD,EAAgBO,KAAhB,CAAhB;AACH;;AAED,UAAUa,WAAV,GAAuB;AACnB,QAAMtB,UAAU,CAACI,eAAD,EAAiBc,MAAjB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAoB;AAC/B,QAAM5B,GAAG,CAAC,CACNG,IAAI,CAACsB,UAAD,CADE,EAENtB,IAAI,CAACwB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all,call,delay,fork, put, takeLatest} from 'redux-saga/effects';\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST,LOG_OUT_FAILURE,LOG_OUT_REQUEST } from '../reducers/user';\r\nimport axios from 'axios';\r\n\r\nfunction logInApi(data){\r\n    return axios.post('/api/user/login',data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        const result = yield call(logInApi,action.data)\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n            data:result.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n            error:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            error:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    console.log('asdasd');\r\n    yield takeLatest(LOG_IN_REQUEST,logIn);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}