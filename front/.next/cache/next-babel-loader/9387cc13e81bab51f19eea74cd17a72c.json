{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlarb\\\\Documents\\\\nodebird\\\\front\\\\components\\\\PostForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post'; // const dummy = {\n//   isLoggedIn: true,\n//   imagePaths: [],\n//   mainPosts: [{\n//     User: {\n//       id: 1,\n//       nickname: '제로초',\n//     },\n//     content: '첫 번째 게시글',\n//     img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//   }],\n// };\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const imageInput = useRef();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]); // const onChangeImages = useCallback((e) => {\n  //   console.log('images', e.target.files);\n  //   const imageFormData = new FormData();\n  //   [].forEach.call(e.target.files, (f) => {\n  //     imageFormData.append('image', f);\n  //   });\n  //   dispatch({\n  //     type: UPLOAD_IMAGES_REQUEST,\n  //     data: imageFormData,\n  //   });\n  // }, []);\n\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    // const formData = new FormData();\n    // imagePaths.forEach((p)=>{\n    //   formData.append('image',p);\n    // })\n    // formData.append('content',text);\n    // return dispatch({\n    //   type:ADD_POST_REQUEST,\n    //   data:formData,\n    // })\n    dispatch(addPost(text));\n  }, [text]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"\\uC785\\uB825\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${v}`,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/components/PostForm.jsx"],"names":["React","useCallback","useRef","useState","useEffect","Form","Input","Button","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","useSelector","useDispatch","addPost","PostForm","imagePaths","addPostDone","state","post","text","setText","imageInput","dispatch","onClickImageUpload","current","click","onChangeText","e","target","value","onSubmit","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef,useState,useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { ADD_POST_REQUEST,UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {addPost} from '../reducers/post'\r\n// const dummy = {\r\n//   isLoggedIn: true,\r\n//   imagePaths: [],\r\n//   mainPosts: [{\r\n//     User: {\r\n//       id: 1,\r\n//       nickname: '제로초',\r\n//     },\r\n//     content: '첫 번째 게시글',\r\n//     img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n//   }],\r\n// };\r\n\r\n\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const [text,setText] = useState('');\r\n  const imageInput = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText('');\r\n    }\r\n  }, [addPostDone]);\r\n\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  // const onChangeImages = useCallback((e) => {\r\n  //   console.log('images', e.target.files);\r\n  //   const imageFormData = new FormData();\r\n  //   [].forEach.call(e.target.files, (f) => {\r\n  //     imageFormData.append('image', f);\r\n  //   });\r\n  //   dispatch({\r\n  //     type: UPLOAD_IMAGES_REQUEST,\r\n  //     data: imageFormData,\r\n  //   });\r\n  // }, []);\r\n\r\n  const onChangeText = useCallback((e)=> {\r\n     setText(e.target.value);\r\n  },[])\r\n\r\n  const onSubmit = useCallback((e)=> {\r\n\r\n    // const formData = new FormData();\r\n    // imagePaths.forEach((p)=>{\r\n    //   formData.append('image',p);\r\n    // })\r\n    // formData.append('content',text);\r\n    // return dispatch({\r\n    //   type:ADD_POST_REQUEST,\r\n    //   data:formData,\r\n    // })\r\n      dispatch(addPost(text));\r\n  },[text]);\r\n\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit} >\r\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"\" />\r\n      <div>\r\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">입력</Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v,i) => {\r\n          return (\r\n            <div key={v} style={{ display: 'inline-block' }}>\r\n              <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n              <div>\r\n                <Button>제거</Button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}