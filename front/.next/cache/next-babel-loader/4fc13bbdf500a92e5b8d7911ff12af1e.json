{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nconst initialState = {\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false,\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  removeFollowerLoading: false,\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\"; // const dummyUser = (data) => ({\n//     ...data,\n//     nickname: '제로초',\n//     id: 1,\n//     Posts: [{ id: 1 }],\n//     Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\n//     Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\n//   });\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nexport const changeNicknameRequestAction = () => {\n  return {\n    type: CHANGE_NICKNAME_REQUEST\n  };\n};\n\nconst user = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = action.data;\n      draft.logInDone = true;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpDone = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameError = null;\n      draft.changeNicknameDone = false;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    default:\n      return _objectSpread({}, state);\n  }\n});\n\nexport default user;","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/reducers/user.jsx"],"names":["produce","initialState","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loginRequestAction","data","type","logoutRequestAction","changeNicknameRequestAction","user","state","action","draft","error","nickname"],"mappings":"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","sourcesContent":["import produce from \"immer\"\r\n\r\nconst initialState = {\r\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    changeNicknameLoading: false, // 닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null,\r\n    loadFollowingsLoading: false,\r\n    loadFollowingsDone: false,\r\n    loadFollowingsError: null,\r\n    loadFollowersLoading: false,\r\n    loadFollowersDone: false,\r\n    loadFollowersError: null,\r\n    removeFollowerLoading: false,\r\n    removeFollowerDone: false,\r\n    removeFollowerError: null,\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST=\"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS=\"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE=\"CHANGE_NICKNAME_FAILURE\";\r\n\r\n// const dummyUser = (data) => ({\r\n//     ...data,\r\n//     nickname: '제로초',\r\n//     id: 1,\r\n//     Posts: [{ id: 1 }],\r\n//     Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n//     Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n//   });\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return{\r\n        type:LOG_IN_REQUEST,\r\n        data\r\n    }\r\n}\r\nexport const logoutRequestAction = () => ({\r\n        type:LOG_OUT_REQUEST,\r\n})\r\n\r\nexport const changeNicknameRequestAction = () => {\r\n    return{\r\n        type:CHANGE_NICKNAME_REQUEST\r\n    }\r\n}\r\n\r\nconst user = (state=initialState,action)=> produce(state,(draft)=>{\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST : \r\n            draft.logInLoading=true;\r\n            draft.logInError=null;\r\n            draft.logInDone=false;\r\n            break;\r\n        case LOG_IN_SUCCESS :\r\n            draft.logInLoading=false;\r\n            draft.me = action.data;\r\n            draft.logInDone=true;\r\n            break;\r\n        \r\n        case LOG_IN_FAILURE :\r\n            draft.logInLoading=false;\r\n            draft.logInError=action.error;\r\n            break;\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutError = null;\r\n            draft.logOutDone = false;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading =true;\r\n            draft.signUpDone = false;\r\n            draft.signUpError= null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading =false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpDone = false;\r\n            draft.signUpError= action.error;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameError = null;\r\n            draft.changeNicknameDone = false;\r\n            break;\r\n        \r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n      \r\n        default:\r\n            return{\r\n                ...state,\r\n            }\r\n    }\r\n})\r\n\r\nexport default user;"]},"metadata":{},"sourceType":"module"}