{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rlarb\\\\Documents\\\\nodebird\\\\front\\\\components\\\\CommentForm.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }),\n      id = _useSelector.id;\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"KQvJ5jrM13PVYELOcBoR1mblcP4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/components/CommentForm.jsx"],"names":["Button","Form","Input","React","useCallback","useState","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","state","user","me","id","commentText","setCommentText","onSubmitComment","type","data","content","postId","userId","onChangeCommentText","e","target","value","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,qBAAaC,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeC,EAAxB;AAAA,GAAD,CAAxB;AAAA,MAAOA,EAAP,gBAAOA,EAAP;;AACA,kBAAsCX,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOY,WAAP;AAAA,MAAoBC,cAApB;;AAGA,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAM;AACxCQ,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAACX,mBADE;AAEPY,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAO,EAACL,WAAT;AAAqBM,QAAAA,MAAM,EAACZ,IAAI,CAACK,EAAjC;AAAoCQ,QAAAA,MAAM,EAACR;AAA3C;AAFE,KAAD,CAAR;AAID,GALkC,EAKhC,CAACC,WAAD,CALgC,CAAnC;AAOA,MAAMQ,mBAAmB,GAAGrB,WAAW,CAAC,UAACsB,CAAD,EAAO;AAC7CR,IAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAET,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,KAAK,EAAEb,WAAhC;AAA6C,IAAA,QAAQ,EAAEQ,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KAAf;AAAgE,IAAA,IAAI,EAAC,SAArE;AAA+E,IAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF;AAQD,CAzBD;;GAAMtB,W;UACaH,W,EACJC,W;;;KAFTE,W;AA2BNA,WAAW,CAACuB,SAAZ,GAAwB;AACtBtB,EAAAA,IAAI,EAAEL,SAAS,CAAC4B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAezB,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const {id} = useSelector((state)=>state.user.me?.id);\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  \r\n  const onSubmitComment = useCallback(() => {\r\n    dispatch({\r\n      type:ADD_COMMENT_REQUEST,\r\n      data:{content:commentText,postId:post.id,userId:id},\r\n    })\r\n  }, [commentText]);\r\n\r\n  const onChangeCommentText = useCallback((e) => {\r\n    setCommentText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n        <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}