{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, put, takeLatest, fork, throttle } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction addPostApi(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostApi, action.data);\n    console.log(result.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n} // function uploadImagesApi(data){\n//     return axios.post('/post/')\n// }\n// function* uploadImages(action){\n//     try{\n//         const result = yield all(uploadImagesApi,action.data);\n//     }\n// }\n\n\nfunction addCommentApi(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentApi, action.data);\n    yield put({\n      type: ADD_COMMENT_REQUEST,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction* roadPosts(action) {\n  try {\n    const result = yield call(loadPostsApi, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, roadPosts);\n} // function* watchUploadImages(){\n//     yield takeLatest(UPLOAD_IMAGES_REQUEST,uploadImages);\n// }\n\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchLoadPosts) // fork(watchUploadImages),\n  ]);\n}","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/sagas/post.jsx"],"names":["axios","all","call","put","takeLatest","fork","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","addPostApi","data","post","content","addPost","action","result","console","log","type","ADD_POST_TO_ME","id","error","addCommentApi","postId","addComment","err","roadPosts","loadPostsApi","lastId","LOAD_POSTS_FAILURE","response","watchAddPost","watchAddComment","watchLoadPosts","postSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeLatest,fork, throttle } from \"redux-saga/effects\";\r\nimport { ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_FAILURE,UPLOAD_IMAGES_REQUEST,UPLOAD_IMAGES_SUCCESS,\r\nUPLOAD_IMAGES_FAILURE, \r\nADD_COMMENT_REQUEST,\r\nLOAD_POSTS_REQUEST,\r\nLOAD_POSTS_SUCCESS} from \"../reducers/post\";\r\n\r\n\r\nfunction addPostApi(data){\r\n    return axios.post('/post',{\r\n        content:data,\r\n    });\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        console.log(result.data);\r\n        yield put({\r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n        yield put({\r\n            type:ADD_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// function uploadImagesApi(data){\r\n//     return axios.post('/post/')\r\n// }\r\n\r\n// function* uploadImages(action){\r\n//     try{\r\n//         const result = yield all(uploadImagesApi,action.data);\r\n//     }\r\n// }\r\n\r\nfunction addCommentApi(data){\r\n    return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\r\n}\r\n\r\nfunction* addComment(action){\r\n    try{\r\n        const result = yield call(addCommentApi,action.data);\r\n        yield put({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:result.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nfunction* roadPosts(action){\r\n    try{\r\n        const result = yield call(loadPostsApi,action.lastId);\r\n        yield put({\r\n            type:LOAD_POSTS_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(error){\r\n        console.error(error);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\nfunction* watchLoadPosts(){\r\n    yield throttle(5000,LOAD_POSTS_REQUEST,roadPosts);\r\n}\r\n\r\n// function* watchUploadImages(){\r\n//     yield takeLatest(UPLOAD_IMAGES_REQUEST,uploadImages);\r\n// }\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchLoadPosts),\r\n        // fork(watchUploadImages),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}