{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST, FOLLOW_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FollowButton = function FollowButton(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === (me === null || me === void 0 ? void 0 : me.id)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Button, {\n    onClick: onClickButton,\n    children: isFollowing ? 'unfollow' : 'follow'\n  });\n};\n\nexport default FollowButton;","map":null,"metadata":{},"sourceType":"module"}