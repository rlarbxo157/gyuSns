{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from './user';\nimport post from './post'; // const rootReducer = combineReducers({\n//     index:(state ={},action)=> {\n//         switch (action.type) {\n//             case HYDRATE:\n//               return { ...state, ...action.payload };\n//             default:\n//               return state;\n//           }\n//     },\n//     post,\n//     user\n// })\n\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        var combineReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combineReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/qwe/nodebird/front/reducers/index.jsx"],"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","payload","combineReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,WAAW,GAAE,SAAbA,WAAa,CAACC,KAAD,EAAOC,MAAP,EAAiB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACI,aAAOM,MAAM,CAACE,OAAd;;AACJ;AAAQ;AACN,YAAMC,cAAc,GAAGR,eAAe,CAAC;AACrCC,UAAAA,IAAI,EAAJA,IADqC;AAErCC,UAAAA,IAAI,EAAJA;AAFqC,SAAD,CAAtC;AAIA,eAAOM,cAAc,CAACJ,KAAD,EAAOC,MAAP,CAArB;AACD;AATL;AAWD,CAZH;;AAcA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combineReducers } from \"redux\";\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n\r\n// const rootReducer = combineReducers({\r\n//     index:(state ={},action)=> {\r\n//         switch (action.type) {\r\n//             case HYDRATE:\r\n//               return { ...state, ...action.payload };\r\n//             default:\r\n//               return state;\r\n//           }\r\n//     },\r\n//     post,\r\n//     user\r\n// })\r\n\r\n\r\nconst rootReducer =(state,action)=> {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return action.payload;\r\n        default:{\r\n          const combineReducer = combineReducers({\r\n            user,\r\n            post\r\n          });\r\n          return combineReducer(state,action);\r\n        }\r\n    }\r\n  }\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}