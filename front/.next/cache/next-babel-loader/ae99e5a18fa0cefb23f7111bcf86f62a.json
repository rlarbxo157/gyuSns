{"ast":null,"code":"import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst TextInput = ({\n  value\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: value\n  });\n};\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        nickname,\n        password,\n        email\n      }\n    });\n  }, [password, passwordCheck, term]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return /*#__PURE__*/_jsx(AppLayout, {\n    children: /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSubmit,\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-id\",\n          value: email,\n          required: true,\n          onChange: onChangeEmail\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nick\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nick\",\n          value: nickname,\n          required: true,\n          onChange: onChangeNickname\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          required: true,\n          onChange: onChangePassword\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }), passwordError && /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }), termError && /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })]\n    })\n  });\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/qwe/nodebird2/front/pages/signup.jsx"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","AppLayout","useInput","useDispatch","useSelector","SIGN_UP_REQUEST","TextInput","value","Signup","dispatch","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","signUpLoading","signUpDone","signUpError","me","state","user","id","Router","replace","alert","onSubmit","type","data","onChangePasswordCheck","e","target","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback,useEffect } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../components/AppLayout';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nconst TextInput = ({ value }) => {\r\n  return (\r\n    <div>{value}</div>\r\n  )\r\n};\r\n\r\nTextInput.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [term, setTerm] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      Router.replace('/');\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n  const onSubmit = useCallback(() => {\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n    if (!term) {\r\n      return setTermError(true);\r\n    }\r\n    dispatch({\r\n        type:SIGN_UP_REQUEST,\r\n        data:{nickname,password,email}\r\n    })\r\n\r\n  }, [password, passwordCheck, term]);\r\n\r\n  const onChangePasswordCheck = useCallback((e) => {\r\n    setPasswordError(e.target.value !== password);\r\n    setPasswordCheck(e.target.value);\r\n  }, [password]);\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTermError(false);\r\n    setTerm(e.target.checked);\r\n  }, []);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Form onFinish={onSubmit} style={{ padding: 10 }}>\r\n        <div>\r\n          <label htmlFor=\"user-id\">이메일</label>\r\n          <br />\r\n          <Input name=\"user-id\" value={email} required onChange={onChangeEmail} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <br />\r\n          <Input name=\"user-nick\" value={nickname} required onChange={onChangeNickname} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호</label>\r\n          <br />\r\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n          {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n        </div>\r\n      </Form>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}