{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/store/configureStore.jsx"],"names":["createWrapper","createStore","applyMiddleware","reducer","composeWithDevTools","configureStore","context","console","log","middlewares","enhancer","compose","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;;AAEA,IAAMC,cAAc,GAAI,SAAlBA,cAAkB,CAACC,OAAD,EAAa;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,MAAMG,WAAW,GAAE,EAAnB;AACA,MAAMC,QAAQ,GAAG,QACfC,OAAO,CAACT,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CADQ,GAEfL,mBAAmB,CACnBF,eAAe,MAAf,SAAmBO,WAAnB,CADmB,CAFrB;AAKA,MAAMG,KAAK,GAAGX,WAAW,CAACE,OAAD,EAASO,QAAT,CAAzB;AAEA,SAAOE,KAAP;AACH,CAXD;;AAaA,IAAMC,OAAO,GAAGb,aAAa,CAACK,cAAD,EAAgB;AACzCS,EAAAA,KAAK;AADoC,CAAhB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport reducer from '../reducers';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst configureStore  = (context) => {\r\n    console.log(context);\r\n    const middlewares =[];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(\r\n      applyMiddleware(...middlewares),\r\n    );\r\n    const store = createStore(reducer,enhancer);\r\n    \r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug:process.env.NODE_ENV ==='development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}