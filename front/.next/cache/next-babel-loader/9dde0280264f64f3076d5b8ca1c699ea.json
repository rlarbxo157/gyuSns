{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST, FOLLOW_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === (me === null || me === void 0 ? void 0 : me.id)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Button, {\n    onClick: onClickButton,\n    children: isFollowing ? 'unfollow' : 'follow'\n  });\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["C:/qwe/nodebird/front/components/FollowButton.jsx"],"names":["React","useCallback","Button","useDispatch","useSelector","UNFOLLOW_REQUEST","FOLLOW_REQUEST","FollowButton","post","dispatch","me","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,kBAA9C;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAON,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAxB;AACA,QAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAKA,CAAC,CAACC,EAAF,KAAOT,IAAI,CAACU,IAAL,CAAUD,EAA1C,CAApB;AAGA,QAAME,aAAa,GAAGlB,WAAW,CAAC,MAAK;AACrC,QAAGY,WAAH,EAAe;AACbJ,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAACf,gBADE;AAEPgB,QAAAA,IAAI,EAACb,IAAI,CAACU,IAAL,CAAUD;AAFR,OAAD,CAAR;AAID,KALD,MAKK;AACHR,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAACd,cADE;AAEPe,QAAAA,IAAI,EAACb,IAAI,CAACU,IAAL,CAAUD;AAFR,OAAD,CAAR;AAID;AACF,GAZgC,EAY/B,CAACJ,WAAD,CAZ+B,CAAjC;;AAcA,MAAGL,IAAI,CAACU,IAAL,CAAUD,EAAV,MAAgBP,EAAhB,aAAgBA,EAAhB,uBAAgBA,EAAE,CAAEO,EAApB,CAAH,EAA0B;AACxB,WAAO,IAAP;AACD;;AAED,sBACA,KAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA,cACIN,WAAW,GAAC,UAAD,GAAY;AAD3B,IADA;AAKD,CA7BD;;AAmCA,eAAeN,YAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {UNFOLLOW_REQUEST,FOLLOW_REQUEST} from '../reducers/user'\r\n\r\n\r\nconst FollowButton = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const {me} = useSelector((state)=>state.user);\r\n  const isFollowing = me?.Followings.find((v)=>v.id===post.User.id);\r\n\r\n\r\n  const onClickButton = useCallback(()=> {\r\n    if(isFollowing){\r\n      dispatch({\r\n        type:UNFOLLOW_REQUEST,\r\n        data:post.User.id,\r\n      });\r\n    }else{\r\n      dispatch({\r\n        type:FOLLOW_REQUEST,\r\n        data:post.User.id\r\n      })\r\n    }\r\n  },[isFollowing]);\r\n\r\n  if(post.User.id ===me?.id){\r\n    return null;\r\n  }\r\n\r\n  return (\r\n  <Button onClick={onClickButton}>\r\n     {isFollowing?'unfollow':'follow'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}