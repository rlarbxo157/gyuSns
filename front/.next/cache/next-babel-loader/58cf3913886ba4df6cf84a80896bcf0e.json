{"ast":null,"code":"import React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useSelector, useDispatch } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport AppLayout from '../components/AppLayout';\nimport FollowList from '../components/FollowList';\nimport Router from 'next/router';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\n// import useSWR from 'swr';\n// const fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(AppLayout, {\n      children: [/*#__PURE__*/_jsx(NicknameEditForm, {}), /*#__PURE__*/_jsx(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: me.Followings\n      }), /*#__PURE__*/_jsx(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: me.Followers\n      })]\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Profile;","map":{"version":3,"sources":["C:/qwe/nodebird/front/pages/profile.jsx"],"names":["React","useEffect","Head","useSelector","useDispatch","NicknameEditForm","AppLayout","FollowList","Router","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","Profile","dispatch","state","user","me","type","id","push","Followings","Followers"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,sBAAT,EAAgCC,uBAAhC,QAA+D,kBAA/D;;;;;AAGA;AAEA;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,qBAAeD,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAGAG,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD,GAPQ,EAON,EAPM,CAAT;AASAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAAEc,EAAE,IAAIA,EAAE,CAACE,EAAX,CAAJ,EAAoB;AAClBT,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACH,EAAE,IAAIA,EAAE,CAACE,EAAV,CAJM,CAAT;;AAMA,MAAI,CAACF,EAAL,EAAS;AACP,WAAO,aAAP;AACD;;AACD,sBACE;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF,eAIE,MAAC,SAAD;AAAA,8BACE,KAAC,gBAAD,KADF,eAEE,KAAC,UAAD;AACE,QAAA,MAAM,EAAC,iCADT;AAEE,QAAA,IAAI,EAAEA,EAAE,CAACI;AAFX,QAFF,eAME,KAAC,UAAD;AACE,QAAA,MAAM,EAAC,iCADT;AAEE,QAAA,IAAI,EAAEJ,EAAE,CAACK;AAFX,QANF;AAAA,MAJF;AAAA,IADF;AAkBD,CAxCD;;;AA0DA,eAAeT,OAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport Head from 'next/head';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport AppLayout from '../components/AppLayout';\r\nimport FollowList from '../components/FollowList';\r\nimport Router from 'next/router';\r\nimport { LOAD_FOLLOWERS_REQUEST,LOAD_FOLLOWINGS_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\n// import useSWR from 'swr';\r\n\r\n// const fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n    });\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push('/');\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...'\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>내 프로필 | NodeBird</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowList\r\n          header=\"팔로잉 목록\"\r\n          data={me.Followings}\r\n        />\r\n        <FollowList\r\n          header=\"팔로워 목록\"\r\n          data={me.Followers}\r\n        />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store)=> async({req,res})=>{\r\n  // console.log('getServerSideProps start');\r\n  // console.log(req.headers);\r\n  const cookie = req ?req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  store.dispatch(END);\r\n  // console.log('getServerSideProps end');\r\n  await store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}