{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, put, takeLatest, fork, throttle } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostApi(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostApi, action.data);\n    console.log(result.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n} // function uploadImagesApi(data){\n//     return axios.post('/post/')\n// }\n// function* uploadImages(action){\n//     try{\n//         const result = yield all(uploadImagesApi,action.data);\n//     }\n// }\n\n\nfunction addCommentApi(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentApi, action.data);\n    yield put({\n      type: ADD_COMMENT_REQUEST,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction loadPostsApi(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsApi, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchRemovePost) // fork(watchUploadImages),\n  ]);\n}","map":{"version":3,"sources":["C:/qwe/nodebird/front/sagas/post.jsx"],"names":["axios","all","call","put","takeLatest","fork","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","REMOVE_POST_REQUEST","ADD_POST_TO_ME","addPostApi","data","post","addPost","action","result","console","log","type","id","error","addCommentApi","postId","addComment","err","loadPostsApi","get","loadPosts","lastId","response","uploadImagesAPI","uploadImages","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","removePostAPI","removePost","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","watchAddPost","watchAddComment","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","watchRemovePost","postSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeLatest,fork, throttle } from \"redux-saga/effects\";\r\nimport { ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_FAILURE,UPLOAD_IMAGES_REQUEST,UPLOAD_IMAGES_SUCCESS,\r\nUPLOAD_IMAGES_FAILURE, \r\nADD_COMMENT_REQUEST,\r\nLOAD_POSTS_REQUEST,\r\nLOAD_POSTS_SUCCESS,LOAD_POSTS_FAILURE,LIKE_POST_REQUEST,LIKE_POST_SUCCESS,LIKE_POST_FAILURE,\r\nUNLIKE_POST_REQUEST,UNLIKE_POST_SUCCESS,UNLIKE_POST_FAILURE,REMOVE_POST_REQUEST} from \"../reducers/post\";\r\n\r\nimport {ADD_POST_TO_ME} from '../reducers/user';\r\n\r\n\r\nfunction addPostApi(data){\r\n    return axios.post('/post',data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        console.log(result.data);\r\n        yield put({\r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n        yield put({\r\n            type:ADD_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// function uploadImagesApi(data){\r\n//     return axios.post('/post/')\r\n// }\r\n\r\n// function* uploadImages(action){\r\n//     try{\r\n//         const result = yield all(uploadImagesApi,action.data);\r\n//     }\r\n// }\r\n\r\nfunction addCommentApi(data){\r\n    return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\r\n}\r\n\r\nfunction* addComment(action){\r\n    try{\r\n        const result = yield call(addCommentApi,action.data);\r\n        yield put({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:result.data\r\n        })\r\n    }catch(err){\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nfunction loadPostsApi(data){\r\n    return axios.get(`/posts`,data);\r\n}\r\n\r\nfunction* loadPosts(action){\r\n    try{\r\n        const result = yield call(loadPostsApi,action.lastId);\r\n        yield put({\r\n            type:LOAD_POSTS_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(error){\r\n        console.error(error);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            error: error.response.data,\r\n        });\r\n    }\r\n}\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images', data);\r\n  }\r\n  \r\nfunction* uploadImages(action){\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        yield put({\r\n          type: UPLOAD_IMAGES_SUCCESS,\r\n          data: result.data,\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n          type: UPLOAD_IMAGES_FAILURE,\r\n          error: err.response.data,\r\n        });\r\n      }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n  }\r\n  \r\n  function* likePost(action) {\r\n    try {\r\n      const result = yield call(likePostAPI, action.data);\r\n      yield put({\r\n        type: LIKE_POST_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: LIKE_POST_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  function unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n  }\r\n  \r\n  function* unlikePost(action) {\r\n    try {\r\n      const result = yield call(unlikePostAPI, action.data);\r\n      yield put({\r\n        type: UNLIKE_POST_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: UNLIKE_POST_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  function removePostAPI(data) {\r\n    return axios.delete(`/post/${data}`);\r\n  }\r\n  \r\n  function* removePost(action) {\r\n    try {\r\n      const result = yield call(removePostAPI, action.data);\r\n      yield put({\r\n        type: REMOVE_POST_SUCCESS,\r\n        data: result.data,\r\n      });\r\n      yield put({\r\n        type: REMOVE_POST_OF_ME,\r\n        data: action.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: REMOVE_POST_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\nfunction* watchLoadPosts(){\r\n    yield throttle(5000,LOAD_POSTS_REQUEST,loadPosts);\r\n}\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n  }\r\n\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchUploadImages(){\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST,uploadImages);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchLoadPosts),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchUploadImages),\r\n        fork(watchRemovePost),\r\n        // fork(watchUploadImages),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}