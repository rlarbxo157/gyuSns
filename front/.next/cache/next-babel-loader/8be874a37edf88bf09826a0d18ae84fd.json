{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird2\\\\front\\\\pages\\\\_app.jsx\";\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport wrapper from '../store/configureStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NodeBird = ({\n  Component\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  res\n}) => {\n  // console.log(req.headers);\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default wrapper.withRedux(NodeBird);","map":{"version":3,"sources":["C:/qwe/nodebird2/front/pages/_app.jsx"],"names":["React","Head","PropTypes","wrapper","NodeBird","Component","propTypes","elementType","isRequired","getServerSideProps","store","req","res","cookie","headers","axios","defaults","Cookie","dispatch","type","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","END","sagaTask","toPromise","withRedux"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAClC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CATD;;AAWAD,QAAQ,CAACE,SAAT,GAAqB;AACnBD,EAAAA,SAAS,EAAEH,SAAS,CAACK,WAAV,CAAsBC;AADd,CAArB;AAIA,OAAO,MAAMC,kBAAkB,GAAGN,OAAO,CAACM,kBAAR,CAA4BC,KAAD,IAAW,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAC9F;AACA,QAAMC,MAAM,GAAGF,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAE,EAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgC,EAAhC;;AACA,MAAIN,GAAG,IAAIE,MAAX,EAAmB;AACfE,IAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgCJ,MAAhC;AACH;;AACDH,EAAAA,KAAK,CAACQ,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAEC;AADK,GAAf;AAGAV,EAAAA,KAAK,CAACQ,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAEE;AADK,GAAf;AAGAX,EAAAA,KAAK,CAACQ,QAAN,CAAeI,GAAf;AACA,QAAMZ,KAAK,CAACa,QAAN,CAAeC,SAAf,EAAN;AACD,CAfiC,CAA3B;AAiBP,eAAerB,OAAO,CAACsB,SAAR,CAAkBrB,QAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport 'antd/dist/antd.css';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst NodeBird = ({ Component }) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>NodeBird</title>\r\n      </Head>\r\n      <Component />\r\n    </>\r\n  );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, res }) => {\r\n  // console.log(req.headers);\r\n  const cookie = req ? req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  store.dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n  });\r\n  store.dispatch(END);\r\n  await store.sagaTask.toPromise();\r\n})\r\n\r\nexport default wrapper.withRedux(NodeBird);"]},"metadata":{},"sourceType":"module"}