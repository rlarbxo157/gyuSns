{"ast":null,"code":"var _jsxFileName = \"C:\\\\qwe\\\\nodebird2\\\\front\\\\pages\\\\LandingPage.jsx\";\nimport React from 'react';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingPage = () => {\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  res\n}) => {\n  // console.log(req.headers);\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default LandingPage;","map":{"version":3,"sources":["C:/qwe/nodebird2/front/pages/LandingPage.jsx"],"names":["React","AppLayout","PostForm","PostCard","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","wrapper","END","LandingPage","useEffect","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","hasMorePosts","loadPostsLoading","lastId","mainPosts","length","id","dispatch","type","addEventListener","removeEventListener","me","state","user","post","map","getServerSideProps","store","req","res","cookie","headers","axios","defaults","Cookie","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,GAAT,QAAoB,YAApB;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAEtBC,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASC,QAAT,GAAoB;AAChB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GAA6DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAzG,EAA8G;AAC1G,YAAIC,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACnC,gBAAMC,MAAM,iBAAGC,SAAS,CAACA,SAAS,CAACC,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAC,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAAEnB,kBADD;AAELc,YAAAA;AAFK,WAAD,CAAR;AAIH;AACJ;AACJ;;AACDR,IAAAA,MAAM,CAACc,gBAAP,CAAwB,QAAxB,EAAkCf,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACe,mBAAP,CAA2B,QAA3B,EAAqChB,QAArC;AACH,KAFD;AAGH,GAhBQ,EAgBN,CAACO,YAAD,EAAeC,gBAAf,EAAiCE,SAAjC,CAhBM,CAAT;AAiBA,QAAM;AAAEO,IAAAA;AAAF,MAASxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAET,IAAAA,SAAF;AAAaH,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDf,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAjE;AACA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKV,SAAS,CAACW,GAAV,CAAeD,IAAD,iBACX,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACR,EAApB;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA7BD;;AA+BA,OAAO,MAAMU,kBAAkB,GAAG1B,OAAO,CAAC0B,kBAAR,CAA4BC,KAAD,IAAW,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAC5F;AACA,QAAMC,MAAM,GAAGF,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAE,EAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgC,EAAhC;;AACA,MAAIN,GAAG,IAAIE,MAAX,EAAmB;AACfE,IAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgCJ,MAAhC;AACH;;AACDH,EAAAA,KAAK,CAACV,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAEpB;AADK,GAAf;AAGA6B,EAAAA,KAAK,CAACV,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAEnB;AADK,GAAf;AAGA4B,EAAAA,KAAK,CAACV,QAAN,CAAehB,GAAf;AACA,QAAM0B,KAAK,CAACQ,QAAN,CAAeC,SAAf,EAAN;AACH,CAfiC,CAA3B;AAkBP,eAAelC,WAAf","sourcesContent":["import React from 'react'\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport wrapper from '../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nconst LandingPage = () => {\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n    return(\r\n        <AppLayout>\r\n            <PostForm />\r\n            {mainPosts.map((post) =>\r\n                <PostCard key={post.id} post={post} />\r\n            )}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, res }) => {\r\n    // console.log(req.headers);\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n})\r\n\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}