{"ast":null,"code":"import produce from \"immer\";\nvar initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMNET_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMNET_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_TO_ME = 'REMOVE_POST_TO_ME';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\n\nvar post = function post() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default post;","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/reducers/post.jsx"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_TO_ME","addPost","data","type","post","state","action","draft","unshift","error","find","v","id","PostId","Comments"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nconst initialState = {\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    hasMorePosts: true,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST =\"ADD_POST_REQUEST\"\r\nexport const ADD_POST_SUCCESS =\"ADD_POST_SUCCESS\"\r\nexport const ADD_POST_FAILURE =\"ADD_POST_FAILURE\"\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMNET_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMNET_FAILURE';\r\n\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_TO_ME ='REMOVE_POST_TO_ME';\r\n\r\nexport const addPost = (data)=> ({ \r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nconst post = (state=initialState,action)=> produce(state,(draft)=> {\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;\r\n        case ADD_POST_SUCCESS:\r\n            draft.addPostLoading = false;\r\n            draft.addPostDone = true;\r\n            draft.mainPosts.unshift(action.data);\r\n            draft.imagePaths = [];\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = false;\r\n            draft.addPostError = action.error;\r\n            break;\r\n\r\n        case UPLOAD_IMAGES_REQUEST:\r\n            draft.uploadImagesLoading = true;\r\n            draft.uploadImagesDone = false;\r\n            draft.uploadImagesError = null;\r\n            break;\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            draft.imagePaths = action.data;\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesDone = true;\r\n            break;\r\n            }\r\n        case UPLOAD_IMAGES_FAILURE:\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesError = action.error;\r\n            break;\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.addCommentError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Comments.unshift(action.data);\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n})\r\n\r\nexport default post;"]},"metadata":{},"sourceType":"module"}