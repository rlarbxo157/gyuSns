{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\n\nfunction addPostApi() {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostApi, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/rlarb/Documents/nodebird/front/sagas/post.jsx"],"names":["axios","all","call","put","takeLatest","ADD_POST_REQUEST","addPostApi","post","data","addPost","action","result","type","ADD_POST_SUCCESS","error","console","log","watchAddPost","postSaga","fork"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAGA,SAASC,UAAT,GAAqB;AACjB,SAAON,KAAK,CAACO,IAAN,CAAW,OAAX,EAAmBC,IAAnB,CAAP;AACH;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,UAAD,EAAYI,MAAM,CAACF,IAAnB,CAAzB;AACA,UAAML,GAAG,CAAC;AACNS,MAAAA,IAAI,EAACC,gBADC;AAENL,MAAAA,IAAI,EAACG,MAAM,CAACH;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAGD,UAAUG,YAAV,GAAwB;AACpB,QAAMb,UAAU,CAACC,gBAAD,EAAkBI,OAAlB,CAAhB;AACH;;AAGD,eAAe,UAAUS,QAAV,GAAoB;AAC/B,QAAMjB,GAAG,CAAC,CACNkB,IAAI,CAACF,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\r\n\r\n\r\nfunction addPostApi(){\r\n    return axios.post('/post',data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        yield put({\r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}