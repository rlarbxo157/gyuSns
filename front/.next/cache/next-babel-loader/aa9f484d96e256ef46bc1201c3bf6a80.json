{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImagesZoom from './ImagesZoom';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: `http://localhost:3065/${images[0].src}`,\n        onClick: onZoom\n      }), showImagesZoom && /*#__PURE__*/_jsx(ImagesZoom, {\n        images: images,\n        onClose: onClose\n      })]\n    });\n  }\n\n  if (images.length === 2) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          src: `http://localhost:3065/${images[0].src}`,\n          width: \"50%\",\n          onClick: onZoom\n        }), /*#__PURE__*/_jsx(\"img\", {\n          src: `http://localhost:3065/${images[1].src}`,\n          width: \"50%\",\n          onClick: onZoom\n        })]\n      }), showImagesZoom && /*#__PURE__*/_jsx(ImagesZoom, {\n        images: images,\n        onClose: onClose\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: `http://localhost:3065/${images[0].src}`,\n        alt: images[0].src,\n        width: \"50%\",\n        onClick: onZoom\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '50%',\n          textAlign: 'center',\n          verticalAlign: 'middle'\n        },\n        onClick: onZoom,\n        children: [/*#__PURE__*/_jsx(PlusOutlined, {}), /*#__PURE__*/_jsx(\"br\", {}), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\"]\n      })]\n    }), showImagesZoom && /*#__PURE__*/_jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    })]\n  });\n};\n\nexport default PostImages;","map":{"version":3,"sources":["C:/qwe/nodebird2/front/components/PostImages.jsx"],"names":["React","useCallback","useState","PlusOutlined","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCN,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMO,MAAM,GAAGR,WAAW,CAAC,MAAM;AAC/BO,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,QAAME,OAAO,GAAGT,WAAW,CAAC,MAAM;AAChCO,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAF0B,EAExB,EAFwB,CAA3B;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,QAAA,OAAO,EAAEH;AAA7D,QADF,EAEGF,cAAc,iBAAI,KAAC,UAAD;AAAY,QAAA,MAAM,EAAED,MAApB;AAA4B,QAAA,OAAO,EAAEI;AAArC,QAFrB;AAAA,MADF;AAMD;;AACD,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBACE;AAAA,8BACE;AAAA,gCACE;AAAK,UAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,UAAA,KAAK,EAAC,KAA1D;AAAgE,UAAA,OAAO,EAAEH;AAAzE,UADF,eAEE;AAAK,UAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,UAAA,KAAK,EAAC,KAA1D;AAAgE,UAAA,OAAO,EAAEH;AAAzE,UAFF;AAAA,QADF,EAKGF,cAAc,iBAAI,KAAC,UAAD;AAAY,QAAA,MAAM,EAAED,MAApB;AAA4B,QAAA,OAAO,EAAEI;AAArC,QALrB;AAAA,MADF;AASD;;AACD,sBACE;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,QAAA,GAAG,EAAEN,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAnE;AAAwE,QAAA,KAAK,EAAC,KAA9E;AAAoF,QAAA,OAAO,EAAEH;AAA7F,QADF,eAEE;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,OAAO,EAAE,cAAX;AAA2BC,UAAAA,KAAK,EAAE,KAAlC;AAAyCC,UAAAA,SAAS,EAAE,QAApD;AAA8DC,UAAAA,aAAa,EAAE;AAA7E,SADT;AAEE,QAAA,OAAO,EAAEP,MAFX;AAAA,gCAIE,KAAC,YAAD,KAJF,eAKE,cALF,EAMGH,MAAM,CAACK,MAAP,GAAgB,CANnB;AAAA,QAFF;AAAA,MADF,EAaGJ,cAAc,iBAAI,KAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAbrB;AAAA,IADF;AAiBD,CA/CD;;AAuDA,eAAeL,UAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport ImagesZoom from './ImagesZoom';\r\n\r\nconst PostImages = ({ images }) => {\r\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n\r\n  const onClose = useCallback(() => {\r\n    setShowImagesZoom(false);\r\n  }, []);\r\n\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img src={`http://localhost:3065/${images[0].src}`} onClick={onZoom} />\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n          <img src={`http://localhost:3065/${images[1].src}`} width=\"50%\" onClick={onZoom} />\r\n        </div>\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <img src={`http://localhost:3065/${images[0].src}`} alt={images[0].src} width=\"50%\" onClick={onZoom} />\r\n        <div\r\n          style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }}\r\n          onClick={onZoom}\r\n        >\r\n          <PlusOutlined />\r\n          <br />\r\n          {images.length - 1}\r\n          개의 사진 더보기\r\n        </div>\r\n      </div>\r\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n    </>\r\n  );\r\n};\r\n\r\nPostImages.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}